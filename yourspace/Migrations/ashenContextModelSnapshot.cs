// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using yourspace.Models;

namespace yourspace.Migrations
{
    [DbContext(typeof(ashenContext))]
    partial class ashenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("yourspace.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AccountID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("HashedPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("SaltValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("yourspace.Models.AdminAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnName("AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("AccessLevel")
                        .HasColumnType("int");

                    b.HasKey("AccountId")
                        .HasName("AdminAcount_pk");

                    b.ToTable("AdminAccount");
                });

            modelBuilder.Entity("yourspace.Models.Posts", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnName("AccountID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostTime")
                        .HasColumnName("postTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PhotoPath")
                        .HasColumnName("photoPath")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TextPost")
                        .HasColumnName("textPost")
                        .HasColumnType("nvarchar(154)")
                        .HasMaxLength(154);

                    b.HasKey("AccountId", "PostTime")
                        .HasName("Post_pk");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("yourspace.Models.UserAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnName("AccountID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserAccountAccountId")
                        .HasColumnType("int");

                    b.HasKey("AccountId")
                        .HasName("UserAccount_pk");

                    b.HasIndex("UserAccountAccountId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("yourspace.Models.AdminAccount", b =>
                {
                    b.HasOne("yourspace.Models.Account", "Account")
                        .WithOne("AdminAccount")
                        .HasForeignKey("yourspace.Models.AdminAccount", "AccountId")
                        .HasConstraintName("AdminAccount_fk")
                        .IsRequired();
                });

            modelBuilder.Entity("yourspace.Models.Posts", b =>
                {
                    b.HasOne("yourspace.Models.UserAccount", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("Posts_fk")
                        .IsRequired();
                });

            modelBuilder.Entity("yourspace.Models.UserAccount", b =>
                {
                    b.HasOne("yourspace.Models.Account", "Account")
                        .WithOne("UserAccount")
                        .HasForeignKey("yourspace.Models.UserAccount", "AccountId")
                        .HasConstraintName("UserAccount_fk")
                        .IsRequired();

                    b.HasOne("yourspace.Models.UserAccount", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserAccountAccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
